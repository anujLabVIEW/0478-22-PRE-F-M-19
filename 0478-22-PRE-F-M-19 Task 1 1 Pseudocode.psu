START

// **   DECLARE CONSTANTS

// These are the options of the various properties of the pizza available
SizesAvailable["Small", "Medium", "Large"]  // The size of the pizza
BasesAvailable["Thick", "Thin"]  // The type of base of the pizza
ToppingsAvailable["Pepperoni", "Chicken", "Extra Cheese", "Mushrooms", "Spinach", "Olives"]  // The toppings available

MaxToppings ← 3  // The maximum number of toppings that can be taken


// **   DECLARE VARIABLES
CurrentID ← 0

// **   TASK 1
// Use a default status "Alter" to customize the pizza
// Input the values of each attribute and validate them
// Give the customer a choice to alter the order, confirm it or cancel it
// If they choose to alter, re-input the values
// If they confirm it, provide them with a new order number.

Status ← "Alter"  // Default status to input values

// Input and validate the values
WHILE Status = "Alter" DO  // As long as the status is "Alter"

    // Output the available options
    
    // Output the sizes
    PRINT "The following sizes are available to choose from:"
    FOR Count ← 1 TO 3  // Iterate 3 times for 3 sizes
        PRINT SizesAvailable[Count]  // Output the available sizes
    NEXT Count
    
    // Output the bases
    PRINT "The following bases are available to choose from:"
    FOR Count ← 1 TO 2  // Iterate 2 times for 2 pizza bases
        PRINT BasesAvailable[Count]  // Output the available bases
    NEXT Count
    
    // Output the toppings
    PRINT "The following toppings are available to choose from:"
    FOR Count ← 1 TO 6  // Iterate 6 times for 6 toppings
        PRINT ToppingsAvailable[Count]  // Output the available toppings
    NEXT Count
    
    //Input and validate the size of the pizza
    REPEAT  // Validation loop
        PRINT "Please enter the size of the pizza you would like:"  // Input prompt
        INPUT Size  // Input the size
        
        SizeValid ← FALSE  // Set flag as invalid
        
        // Check if the size is valid
        FOR Count ← 1 TO 3  // Iterate 3 times for 3 sizes
            IF Size = SizesAvailable[Count]  // If a match is found from the available sizes
                THEN SizeValid ← TRUE  // Set flag as valid
            ENDIF
        NEXT Count
        
    UNTIL SizeValid = TRUE  // Unless the size is invalid, break out of the loop
    
    // Input and validate the type of pizza base
    REPEAT  // Validation loop
        PRINT "Please enter the type base of the pizza you would like:"  // Input prompt
        INPUT Base  // Input the size
        
        BaseValid ← FALSE  // Set flag as invalid
        
        FOR Count ← 1 TO 2  // Iterate 2 times for two sizes
            IF Base = BasesAvailable[Count]  // If a match is found from the available pizza bases
                THEN BaseValid ← TRUE  // Set flag as valid
            ENDIF
        NEXT Count
        
    UNTIL BaseValid = TRUE  // Unless the type of pizza base is invalid, break out of the loop
    
    // Input and validate the number of toppings the customer wants
    REPEAT  // Validation loop
        PRINT "How many toppings do you want on your pizza? You may enter any whole number 0 and 3."  // Input prompt
        INPUT ToppingChoice  // Input the number of toppings the customer wants
    UNTIL ToppingChoice <= MaxToppings  // Unless the number of toppings is greater than 3, break out of the loop
    
    FOR Count ← 1 TO ToppingChoice  // Iterate as many times as the toppings taken
    
        // Input and validate the topping
        REPEAT  // Validation loop
            PRINT "Please enter the topping on the pizza you would like:"  // Input prompt
            INPUT Topping  // Input the topping
            
            ToppingValid ← FALSE  // Set flag as invalid
            
            FOR Count ← 1 TO 6  // Iterate 6 times for 6 toppings
                IF Topping = ToppingsAvailable[Count]  // If a match is found from the available toppings
                    THEN ToppingValid ← TRUE  // Set flag as valid
                ENDIF
            NEXT Count
        
        UNTIL ToppingValid = TRUE  // Unless the topping is invalid, break out of the loop
    
    NEXT ToppingChoice  // Move on to the next topping
    
    // Allow the customer to choose whether they want to alter their order, confirm it or cancel it
    PRINT "Do you want to Alter your order, Confirm or Not proceed?"  // Input prompt
    INPUT Status  // Input whether the customer wants to alter their order, confirm it or cancel it
    
ENDWHILE  // Unless they want to alter their order, break out of the loop

// Give the customer a unique order ID if they have confirmed it
IF Status = Confirm  // If the customer has confirmed their order
THEN
    PRINT "Your unique order number is:", CurrentID  // Print out the unique ID
    CurrentID ← CurrentID + 1  // Increment the ID for the next confirmed order
ENDIF

END
